<section ng-controller="HomeController">
  <h1 align="center">A Constructive Logic Approach to System Value Assurance</h1>
    
    <p>The aim of this project is to develop and evaluate a new approach to system assurance: a modular approach, taking constructive logic as an organizing principal but replacing formal proof structures with more diverse forms of evidence, and logical judgements based on proofs with engineering judgments based on such evidence, to improve management of complex projects for stakeholder value. The approach is meant at least partly subsume dependability/safety properties and assurance as just one of multiple properties that ultimately contribute to system value and stakeholder satisfaction.</p>

	<h2>Shortcomings in the State of the Art </h2>
    <p>Shortcomings in the current state of the art include</p>

    <ul>
      <li>
        Lack of a satisfactory, practical, useful, theoretically defensible, validated method for making judgments about validity of propositions based on informal, incomplete, imperfect evidence
      </li>
      <li>
        Overfocus on dependability properties to the exclusion of other properties that are also critical in producing systems of value to diverse stakeholders (e.g., Torvalds criticism of security zealots)
      </li>
      <li>
        Inadequate expressiveness of claims language (basically and-trees, Horn clauses)
      </li>
      <li>
        Inadequate support for system and assurance case evolution
      </li>
      <li>
        lack of flexibility, e.g., with respect to "pluggable" inference rules
      </li>
      <li>
        Old-fashioned tools, e.g., desktop software based on Eclipse
      </li>
    </ul>
 


	<h2>What's New? </h2>
   
    <p> First, system safety is just one of many properties that contribute to system value. We will take the Boehm/Sullivan formal ility ontology as a starting point with the intent to replace safety or dependability with value as the top level proposition in assurance cases.</p>

      <p> Second, we will will replace the and-trees of traditional safety assurance clases with far more expressive notations modeled on the structures of higher-order constructive logic. This will make it possible, for example, to say that a stakeholder will be satisfied by this or that, whereas today's assurance cases can generally state only that this and that is required.</p>

      <p> Third, we will provide flexibility in the inference rules for such logics. For example, in some cases we'll support logical deduction. In other cases, we'll support probabilistic inference. Etc.</p>

      <p> Fourth, we will base our prototype tool implementation on modern web application technology. Our initial work will explore the use of the so-called MEAN Stack---Mongo DB, Express, Angular, and Node.js---as a platform for building highly interactive, responsive, and functional web-based tools.</p>

      <p> Fifth, we will support broad range of expressiveness other than and-trees.</p>
      
 
<h2>New Approach </h2>
    <p>We propose a method and a system that will enable engineers and decision makers to</p>

    <ul>
      <li>
        manage and evolve representations of systems and their components, environments, and stakeholders as the real-world subject matter to which propositions (discussed next) refer
      </li>
      <li>
        employ concepts from constructive logic to build propositions about systems and their components, environments, and stakeholders
      </li>
      <li>
        Inadequate expressiveness of claims language (basically and-trees, Horn clauses)
      </li>
      <li>
        Inadequate support for system and assurance case evolution
      </li>
      <li>
        lack of flexibility, e.g., with respect to "pluggable" inference rules
      </li>
      <li>
        Old-fashioned tools, e.g., desktop software based on Eclipse
      </li>
    </ul>

  
</section>
